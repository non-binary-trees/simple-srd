/* ignore me being preachy about css */
:root {
  --site_padding: 0;  /* "_" isnt really used in my naming scheme so I use it to show a css attribute relationship */  
  --site__footer_border-top: 1px solid #eaecef;
  --site__footer_padding-top: 24px;
  /* emojis are 🔥 */
  --nav__a--active__after: '🔥'; /* idk whats up with these variable names either */
  --details--open__after_content: '🌝'; /* change them */
  --details--closed__after_content: '🌚'; /* or don't, Im probably not your mom */
}

@media (max-width: 1024px) {
  /* using media queries to modify paramterized classes is the cool way to write css ❄❄❄ */
  :root {
    --site_padding: 0 8px;
  }
}

.site {
  padding: var(--site_padding);
}

/* BEM is cool but there are other cool things out there too I guess */
.site__footer {  
  border-top: var(--site__footer_border-top); /* why use magic numbers here? I can write them somewhere else like the top of this file */
  padding-top: var(--site__footer_padding-top);
}

.nav ul {
  list-style: none;
}

.nav .nav__title {
  text-align: center; 
}

.nav a.active::after {
  content: var(--nav__a--active__after);
}

/* customize the open and closed styles for the nav menu */
details > summary {
 outline: none; 
}

details > summary::-webkit-details-marker {
  display: none;
}

details > summary > * {
  position: relative;
}

details > summary > ::after {
  position: absolute;
  right: 0; /* 0 is the least magic number that's why it's okay to hardcode 0's */
}

details[open] > summary > ::after {
  content: var(--details--open__after_content);
}

details:not([open]) > summary > ::after {
  content: var(--details--closed__after_content);
}
